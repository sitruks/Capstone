new_ret_users <- as.tbl(new_ret_users)
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") + blank_theme
library(scales)
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") + blank_theme +
theme(axis.title.x = element_blank()) +
geom_text(aes(y = value/2 + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
?scales
knitr::opts_chunk$set(echo = TRUE)
Packages <- c("googleAuthR", "googleAnalyticsR", "tidyverse", "scales")
lapply(Packages, library, character.only = TRUE)
ga_auth(".ga-httr-oauth")
knitr::opts_chunk$set(echo = TRUE)
Packages <- c("googleAuthR", "googleAnalyticsR", "tidyverse", "scales")
lapply(Packages, library, character.only = TRUE)
ga_auth(".ga-httr-oauth")
ga_id <- 158889165
start_date <- "120daysAgo"
end_date <- "yesterday"
twoweek_sessions <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
metrics = "sessions") %>%
rename("This Week" = sessions.d1, "Last Week" = sessions.d2)
twoweek_sessions
new_ret_users <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
metrics = c("sessions"),
dimensions = c("userType")) %>%
rename("This Week" = sessions.d1, "Last Week" = sessions.d2)
new_ret_users <- as.tbl(new_ret_users)
new_ret_users <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
metrics = c("sessions"),
dimensions = c("userType")) %>%
rename("This Week" = sessions.d1, "Last Week" = sessions.d2)
new_ret_users <- as.tbl(new_ret_users)
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") + blank_theme +
theme(axis.title.x = element_blank()) +
geom_text(aes(y = value/2 + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") + theme_bw() +
theme(axis.title.x = element_blank()) +
geom_text(aes(y = value/2 + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
users_thisweek_pie
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank()) +
geom_text(aes(y = value/2 + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
users_thisweek_pie
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") +
theme(axis.title.x = element_blank()) +
geom_text(aes(y = `This Week`/2 + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
users_thisweek_pie
?theme_bw
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") +
theme_bw(axis.title.x = element_blank()) +
geom_text(aes(y = `This Week`/2 + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") +
theme_bw() +
geom_text(aes(y = `This Week`/2 + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
users_thisweek_pie
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") +
theme_bw() +
geom_text(aes(y = `This Week`/3 + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
users_thisweek_pie
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") +
theme_bw() +
geom_text(aes(y = `This Week`/4 + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
users_thisweek_pie
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") +
theme_bw() +
geom_text(aes(y = `This Week` + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
users_thisweek_pie
new_ret_users <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
metrics = c("sessions"),
dimensions = c("userType")) %>%
rename("This Week" = sessions.d1, "Last Week" = sessions.d2)
new_ret_users <- as.tbl(new_ret_users)
new_ret_users
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie +
theme_bw() +
geom_text(aes(y = `This Week` + c(0, cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100)), size = 5)
users_thisweek_pie
pie <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0)
users_thisweek_pie <- pie + scale_fill_brewer("Blues") +
theme_bw() +
geom_text(aes(y = sum(`This Week`) + cumsum(`This Week`)[-length(`This Week`)]),
label = percent(`This Week`/100), size = 5)
df <- as.data.frame(table(mpg$class))
colnames(df) <- c("class", "freq")
pie <- ggplot(df, aes(x = "", y=freq, fill = factor(class))) +
geom_bar(width = 1, stat = "identity") +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
pie + coord_polar(theta = "y", start=0)
pie <- ggplot(mpg, aes(x = "", fill = factor(class))) +
geom_bar(width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="class",
x=NULL,
y=NULL,
title="Pie Chart of class",
caption="Source: mpg")
pie + coord_polar(theta = "y", start=0)
users_thisweek <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer("Blues")
users_thisweek_pie
users_thisweek_pie
users_thisweek <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer("Blues")
users_thisweek
users_thisweek
users_thisweek <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer("Blues") +
labs(x="", y="", title = "Visitors: This Week \n", fill = "User Type") +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5, face = "bold", size = 10))
users_thisweek
users_thisweek
users_thisweek <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer("Blues") +
labs(x="", y="", title = "Visitors: This Week", fill = "User Type") +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5, face = "bold", size = 10))
users_thisweek
users_thisweek
users_thisweek <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer("Bluegs") +
labs(x="", y="", title = "Visitors: This Week \n", fill = "User Type") +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5, face = "bold", size = 10))
users_thisweek
users_thisweek
users_thisweek <- new_ret_users %>%
ggplot(aes(x="", y = `This Week`, fill = userType)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
scale_fill_brewer("Bluegs") +
labs(x="", y="", title = "Visitors: This Week \n") +
theme(plot.title = element_text(hjust = 0.5),
legend.title = element_text(hjust = 0.5, face = "bold", size = 10))
users_thisweek
users_thisweek
knitr::opts_chunk$set(echo = TRUE)
Packages <- c("googleAuthR", "googleAnalyticsR", "tidyverse", "scales")
lapply(Packages, library, character.only = TRUE)
ga_auth(".ga-httr-oauth")
twoweek_sessions <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
metrics = "sessions") %>%
rename("This Week" = sessions.d1, "Last Week" = sessions.d2)
knitr::opts_chunk$set(echo = TRUE)
Packages <- c("googleAuthR", "googleAnalyticsR", "tidyverse", "scales")
lapply(Packages, library, character.only = TRUE)
ga_auth(".ga-httr-oauth")
ga_id <- 158889165
start_date <- "120daysAgo"
end_date <- "yesterday"
twoweek_sessions <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
metrics = "sessions") %>%
rename("This Week" = sessions.d1, "Last Week" = sessions.d2)
twoweek_sessions
?met_filter
dimension_filter <- dim_filter("pagePath","EXACT","vmc-aws-tco-pricing",not = TRUE)
pagePath_filter <- filter_clause_ga4(list(dimension_filter))
tco_table <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
metrics = c("pageviews", "uniquePageviews", "avgTimeOnPage", "entrances","bounceRate", "exitRate"),
dimensions = c("pagePath"),
dim_filters = pagePath_filter,
anti_sample = TRUE)
dimension_filter <- dim_filter("pagePath","EXACT","vmc-aws-tco-pricing",not = TRUE)
pagePath_filter <- filter_clause_ga4(list(dimension_filter))
tco_table <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
metrics = c("pageviews", "uniquePageviews", "avgTimeOnPage", "entrances","bounceRate", "exitRate"),
dimensions = c("pagePath"),
dim_filters = pagePath_filter)
tco_table
dim
dimension_filter <- dim_filter("pagePath","PARTIAL","vmc-aws-tco-pricing",not = TRUE)
pagePath_filter <- filter_clause_ga4(list(dimension_filter))
tco_table <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
metrics = c("pageviews", "uniquePageviews", "avgTimeOnPage", "entrances","bounceRate", "exitRate"),
dimensions = c("pagePath"),
dim_filters = pagePath_filter)
tco_table
dimension_filter <- dim_filter("pagePath","PARTIAL","vmc-aws-tco-pricing",not = TRUE)
pagePath_filter <- filter_clause_ga4(list(dimension_filter))
tco_table <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
dimensions = c("pagePath"),
dim_filters = pagePath_filter),
dimension_filter <- dim_filter("pagePath","PARTIAL","vmc-aws-tco-pricing",not = TRUE)
pagePath_filter <- filter_clause_ga4(list(dimension_filter))
tco_table <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
dimensions = c("pagePath"),
dim_filters = pagePath_filter,
metrics = c("pageviews", "uniquePageviews", "avgTimeOnPage", "entrances","bounceRate", "exitRate"))
dimension_filter <- dim_filter("pagePath","PARTIAL","vmc-aws-tco-pricing",not = FALSE)
pagePath_filter <- filter_clause_ga4(list(dimension_filter))
tco_table <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "16daysAgo", "9daysAgo"),
dimensions = c("pagePath"),
dim_filters = pagePath_filter,
metrics = c("pageviews", "uniquePageviews", "avgTimeOnPage", "entrances","bounceRate", "exitRate"))
tco_table
dimension_filter <- dim_filter("pagePath","PARTIAL","vmc-aws-tco-pricing",not = FALSE)
pagePath_filter <- filter_clause_ga4(list(dimension_filter))
tco_table <- google_analytics(ga_id,
date_range = c("8daysAgo", "yesterday", "365daysAgo", "9daysAgo"),
dimensions = c("pagePath"),
dim_filters = pagePath_filter,
metrics = c("pageviews", "uniquePageviews", "avgTimeOnPage", "entrances","bounceRate", "exitRate"))
tco_table
common_tops <- top20_pv_delta_wow %>% inner_join(top20_lp_delta_wow) %>%
rename("Common Pages" = pagePath) %>%
select("Common Pages")
common_tops <- top20_pv_delta_wow %>% inner_join(top20_lp_delta_wow) %>%
rename("Common Pages" = "pagePath") %>%
select("Common Pages")
tco_dates <- google_analytics(ga_id,
dimensions = c("pagePath", "date", "dateHour", "dateHourMinute"),
dim_filters = pagePath_filter,
metrics = c("pageviews", "uniquePageviews", "avgTimeOnPage", "entrances","bounceRate", "exitRate"))
tco_dates <- google_analytics(ga_id,
date_range = c("365daysAgo", "yesterday"),
dimensions = c("pagePath", "date", "dateHour", "dateHourMinute"),
dim_filters = pagePath_filter,
metrics = c("pageviews", "uniquePageviews", "avgTimeOnPage", "entrances","bounceRate", "exitRate"))
tco_dates
print(g)
# Code copied from ggplot2 case study. Edited slightly for usability.
Packages <- c("dplyr", "ggplot2", "reshape2", "ggthemes", "carData")
lapply(Packages, library, character.only = TRUE)
mosaicGG <- function(data, X, FILL) {
# Proportions in raw data
DF <- as.data.frame.matrix(table(data[[X]], data[[FILL]]))
DF$groupSum <- rowSums(DF)
DF$xmax <- cumsum(DF$groupSum)
DF$xmin <- DF$xmax - DF$groupSum
DF$X <- row.names(DF)
DF$groupSum <- NULL
DF_melted <- melt(DF, id = c("X", "xmin", "xmax"), variable.name = "FILL")
DF_melted <- DF_melted %>%
group_by(X) %>%
mutate(ymax = cumsum(value/sum(value)),
ymin = ymax - value/sum(value))
# Chi-sq test
results <- chisq.test(table(data[[FILL]], data[[X]])) # fill and then x
resid <- melt(results$residuals)
names(resid) <- c("FILL", "X", "residual")
# Merge data
DF_all <- merge(DF_melted, resid)
# Positions for labels
DF_all$xposn <- DF_all$xmin + (DF_all$xmax - DF_all$xmin)/2
index <- DF_all$xmax == max(DF_all$xmax)
DF_all$yposn <- DF_all$ymin[index] + (DF_all$ymax[index] - DF_all$ymin[index])/2
# Plot
g <- ggplot(DF_all, aes(ymin = ymin,  ymax = ymax, xmin = xmin,
xmax = xmax, fill = residual)) +
geom_rect(col = "white") +
geom_text(aes(x = xposn, label = X),
y = 1, size = 3, angle = 90, hjust = 1, show.legend = FALSE) +
geom_text(aes(x = max(xmax),  y = yposn, label = FILL),
size = 3, hjust = 1, show.legend = FALSE) +
scale_fill_gradient2("Residuals") +
scale_x_continuous("Individuals", expand = c(0,0)) +
scale_y_continuous("Proportion", expand = c(0,0)) +
theme_tufte() +
theme(legend.position = "bottom")
print(g)
}
mosaicGG(adult, X = "SRAGE_P", FILL = "RBMI")
# Poverty described by age
mosaicGG(adult, X = "SRAGE_P", FILL = "POVLL")
# mtcars: am described by cyl
mosaicGG(mtcars, "cyl", "am")
# Vocab: vocabulary described by educational
mosaicGG(Vocab, "education", "vocabulary")
source('C:/Users/v-kursan/Downloads/Capstone_DS/Data/InitialVisualization_Capstone.R')
install.packages("ROCR")
library(ROCR)
library(caTools)
library(caTools)
library(caTools)
library(caTools)
getwd()
framingham = read.csv("~\Reporting\logistic_regression\DataSets\framingham.csv")
framingham = read.csv("~\Capstone_DS\Reporting\logistic_regression\DataSets\framingham.csv")
framingham = read.csv("~Capstone_DS\Reporting\logistic_regression\DataSets\framingham.csv")
framingham = read.csv("~\Reporting\logistic_regression\DataSets\framingham.csv")
framingham = read.csv("~\Downloads\Capstone_DS\Reporting\logistic_regression\DataSets\framingham.csv")
framingham = read.csv("~Downloads\Capstone_DS\Reporting\logistic_regression\DataSets\framingham.csv")
framingham = read.csv("framingham.csv")
framingham = read.csv("~\Capstone_DS\Reporting\logistic_regression\DataSets\framingham.csv")
framingham = read.csv("~\\Capstone_DS\Reporting\logistic_regression\DataSets\framingham.csv")
framingham = read.csv("~\\Capstone_DS\Reporting\logistic_regression\DataSets\"framingham.csv"")
framingham = read.csv("~\Capstone_DS\Reporting\logistic_regression\DataSets\"framingham.csv"")
framingham = read.csv("\Capstone_DS\Reporting\logistic_regression\DataSets\"framingham.csv"")
framingham = read.csv(\Capstone_DS\Reporting\logistic_regression\DataSets\"framingham.csv")
framingham = read.csv("~/Capstone_DS/Reporting/logistic_regression/DataSets/framingham.csv)
framingham = read.csv("~/Capstone_DS/Reporting/logistic_regression/DataSets/framingham.csv")
framingham = read.csv("~Capstone_DS/Reporting/logistic_regression/DataSets/framingham.csv")
framingham = read.csv("~Downloads/Capstone_DS/Reporting/logistic_regression/DataSets/framingham.csv")
framingham = read.csv("~Downloads/Capstone_DS/Reporting/logistic_regression/DataSets/'framingham.csv'")
framingham = read.csv("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/DataSets/framingham.csv")
str(framingham)
set.seed(1000)
split = sample.split(framingham$TenYearCHD, SplitRatio = 0.65)
#50-80% in the training set
train = subset(framingham, split == TRUE)
test = subset(framingham, split == FALSE)
framinghamLog = glm(TenYearCHD ~ ., data = train, family = binomial)
summary(framinghamLog)
summary(framingham)
str(framingham)
predictTest = predict(framinghamLog, type="response", newdate=test)
table(test$TenYearCHD, predictTest > 0.5)
predictTest = predict(framinghamLog, type="response", newdate=test)
table(test$TenYearCHD, predictTest > 0.5)
predictTest = predict(framinghamLog, type="response", newdata=test)
table(test$TenYearCHD, predictTest > 0.5)
library(ROCR)
ROCRpred = prediction(predictTest, test$TenYearCHD)
as.numeric(performance(ROCRpred, "auc")@y.values)
NH11 <- readRDS("DataSets/NatHealth2011.rds")
labs <- attributes(NH11)$labels
getwd()
setwd("C:/Users/v-kursan/Downloads/Capstone_DS")
getwd()
setwd("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/DataSets")
getwd()
NH11 <- readRDS("DataSets/NatHealth2011.rds")
labs <- attributes(NH11)$labels
setwd("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/Exercises")
NH11 <- readRDS("Exercises/NatHealth2011.rds")
labs <- attributes(NH11)$labels
getwd()
NH11 <- readRDS("Exercises/NatHealth2011.rds")
getwd()
NH11 <- readRDS("Exercises/NatHealth2011.rds")
setwd("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/Exercises")
NH11 <- readRDS("Exercises/NatHealth2011.rds")
NH11 <- readRDS("Exercises/NatHealth2011.rds")
?readRDS
NatHealth2011 <- readRDS("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/Exercises/NatHealth2011.rds")
NatHealth2011
setwd("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/Exercises/")
NH11 <- readRDS("Exercises/NatHealth2011.rds")
rm(NatHealth2011)
setwd("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/Exercises/")
NH11 <- readRDS("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/Exercises/NatHealth2011.rds")
labs <- attributes(NH11)$labels
str(NH11)
str(NH11$hypev)
levels(NH11$hypev)
# collapse all missing values to NA
NH11$hypev <- factor(NH11$hypev, levels=c("2 No", "1 Yes"))
levels(NH11$hypev)
str(NH11$hypev)
?factor
hyp.out <- glm(hypev~age_p+sex+sleep+bmi,
data=NH11, family="binomial")
setwd("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/linear_regression/")
#Initial Run 1-3
states.data <- readRDS("dataSets/states.rds")
setwd("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/Exercises/")
NH11 <- readRDS("Exercises/NatHealth2011.rds")
setwd("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/")
NH11 <- readRDS("Exercises/NatHealth2011.rds")
labs <- attributes(NH11)$labels
str(NH11$hypev) # check stucture of hypev
levels(NH11$hypev) # check levels of hypev
# collapse all missing values to NA
NH11$hypev <- factor(NH11$hypev, levels=c("2 No", "1 Yes"))
# run our regression model
hyp.out <- glm(hypev~age_p+sex+sleep+bmi,
data=NH11, family="binomial")
coef(summary(hyp.out))
hyp.out.tab <- coef(summary(hyp.out))
hyp.out.tab[, "Estimate"] <- exp(coef(hyp.out))
hyp.out.tab
predDat <- with(NH11,
expand.grid(age_p = c(33, 63),
sex = "2 Female",
bmi = mean(bmi, na.rm = TRUE),
sleep = mean(sleep, na.rm = TRUE)))
cbind(predDat, predict(hyp.out, type = "response",
se.fit = TRUE, interval="confidence",
newdata = predDat))
summary(NH11)
library(effects)
plot(allEffects(hyp.out))
install.packages("Zelig")
library(effects)
plot(allEffects(hyp.out))
install.packages("effects")
install.packages("effects")
install.packages("effects")
setwd("C:/Users/v-kursan/Downloads/Capstone_DS/Reporting/logistic_regression/")
NH11 <- readRDS("Exercises/NatHealth2011.rds")
labs <- attributes(NH11)$labels
str(NH11$hypev) # check stucture of hypev
levels(NH11$hypev) # check levels of hypev
# collapse all missing values to NA
NH11$hypev <- factor(NH11$hypev, levels=c("2 No", "1 Yes"))
# run our regression model
hyp.out <- glm(hypev~age_p+sex+sleep+bmi,
data=NH11, family="binomial")
coef(summary(hyp.out))
hyp.out.tab <- coef(summary(hyp.out))
hyp.out.tab[, "Estimate"] <- exp(coef(hyp.out))
hyp.out.tab
predDat <- with(NH11,
expand.grid(age_p = c(33, 63),
sex = "2 Female",
bmi = mean(bmi, na.rm = TRUE),
sleep = mean(sleep, na.rm = TRUE)))
cbind(predDat, predict(hyp.out, type = "response",
se.fit = TRUE, interval="confidence",
newdata = predDat))
library(effects)
plot(allEffects(hyp.out))
library(effects)
install.packages("effects")
library(installer)
install.packages("installer")
